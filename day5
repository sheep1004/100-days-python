函数的使用：
1.定义函数：在Python中可以使用def关键字来定义函数，命名规则跟变量的命名规则是一致的。在函数名后面的圆括号中可以放置传递给函数的参数，函数执行完成后我们可以通过return关键字来返回一个值。
2.函数的参数：在Python中，函数的参数可以有默认值，也支持使用可变参数（例1）。在不确定参数个数的时候，我们可以使用可变参数（例2）。
  例1：
        from random import randint

        def roll_dice(n=2):
            """摇色子"""
            total = 0
            for _ in range(n):
                total += randint(1, 6)
            return total


        def add(a=0, b=0, c=0):
            """三个数相加"""
            return a + b + c


        # 如果没有指定参数那么使用默认值摇两颗色子
        print(roll_dice())
        # 摇三颗色子
        print(roll_dice(3))
        print(add())
        print(add(1))
        print(add(1, 2))
        print(add(1, 2, 3))
        # 传递参数时可以不按照设定的顺序进行传递
        print(add(c=50, a=100, b=200))
   
   例2：
        # 在参数名前面的*表示args是一个可变参数
        def add(*args):
            total = 0
            for val in args:
                total += val
            return total


        # 在调用add函数时可以传入0个或多个参数
        print(add())
        print(add(1))
        print(add(1, 2))
        print(add(1, 2, 3))
        print(add(1, 3, 5, 7, 9))
3.模块管理函数：
  a.同一个.py文件中定义了两个同名函数，由于Python没有函数重载的概念，那么后面的定义会覆盖之前的定义;
  b.Python中每个文件就代表了一个模块（module），我们在不同的模块中可以有同名的函数，在使用函数的时候我们通过import关键字导入指定的模块就可以区分到底要使用的是哪个模块中的函数;
  c.如果我们在模块中编写了执行代码，最好是将这些执行代码放入" if __name__ == '__main__':"中，因为只有直接执行的模块的名字才是"__main__"
